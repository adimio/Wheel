git 指令

--remote 
git remote add （远程仓库别名）（远程仓库url） //添加一个远程仓库
git remote -v   //查看当前远程仓库的信息
git remote rename （旧的仓库别名）（新的仓库别名）
git remote remove （远程仓库别名） //移除一个远程仓库
git remote set-url <远程仓库的别名> <新的远程仓库URL地址> //修改远程仓库的地址

git clone（远程仓库url）
git clone（远程仓库url）（指定的本地仓库）//项目克隆到本地指定仓库
git clone（远程仓库url） -b （远程仓库的分支名【默认是master分支】） （指定的本地仓库）


git init //初始化本地仓库，在当前目录下生成 .git 文件夹
git status //查看本地仓库状态

git branch //列出本地所有分支
git branch （分支名）
git branch -v //列出本地的所有分支并显示最后一次提交，当前所在分支以 "*" 标出
---------- -m （） （）//修改
---------- -d （） //删除


--checkout
切换到已存在的指定分支
git checkout <分支名称>

创建并切换到指定的分支，保留所有的提交记录
等同于 "git branch" 和 "git checkout" 两个命令合并
git checkout -b <分支名称>

创建并切换到指定的分支，删除所有的提交记录
git checkout --orphan <分支名称>

替换掉本地的改动，新增的文件和已经添加到暂存区的内容不受影响
git checkout <文件路径>

git cherry-pick <commit ID> //把已经提交的记录合并到当前分支


--add
把指定的文件添加到暂存区中
git add <文件路径>

添加所有修改、已删除的文件到暂存区中
git add -u [<文件路径>]
git add --update [<文件路径>]

添加所有修改、已删除、新增的文件到暂存区中，省略 <文件路径> 即为当前目录
git add -A [<文件路径>]
git add --all [<文件路径>]

查看所有修改、已删除但没有提交的文件，进入一个子命令系统
git add -i [<文件路径>]
git add --interactive [<文件路径>] 

--commit
把暂存区中的文件提交到本地仓库，调用文本编辑器输入该次提交的描述信息
git commit

把暂存区中的文件提交到本地仓库中并添加描述信息
git commit -m "<提交的描述信息>"

把所有修改、已删除的文件提交到本地仓库中
不包括未被版本库跟踪的文件，等同于先调用了 "git add -u"
git commit -a -m "<提交的描述信息>"

修改上次提交的描述信息
git commit --amend

--push
把本地仓库的分支推送到远程仓库的指定分支
git push <远程仓库的别名> <本地分支名>:<远程分支名>

删除指定的远程仓库的分支
git push <远程仓库的别名> :<远程分支名>
git push <远程仓库的别名> --delete <远程分支名>


生成一个新的提交来撤销某次提交
git revert <commit ID>
--reset//撤销命令
重置暂存区，但文件不受影响
相当于将用 "git add" 命令更新到暂存区的内容撤出暂存区，可以指定文件
没有指定 commit ID 则默认为当前 HEAD
git reset [<文件路径>]
git reset --mixed [<文件路径>]

将 HEAD 的指向改变，撤销到指定的提交记录，文件未修改
git reset <commit ID>
git reset --mixed <commit ID>

将 HEAD 的指向改变，撤销到指定的提交记录，文件未修改
相当于调用 "git reset --mixed" 命令后又做了一次 "git add"
git reset --soft <commit ID>

将 HEAD 的指向改变，撤销到指定的提交记录，文件也修改了
git reset --hard <commit ID>

https://www.jianshu.com/p/93318220cdce
